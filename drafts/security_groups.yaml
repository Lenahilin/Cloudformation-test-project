---
Resources:
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: 'LB SG allowing incoming traffic from the internet'
      GroupName: lucid-lb-sg
      SecurityGroupIngress: 
        - Description: 'allows incoming traffic from loadbalancer to backend instances'
          IpProtocol: -1
          CidrIp: 0.0.0.0/0
          ToPort: 80
      VpcId: 'vpc-0d8b58f3d5536f853' # replace with Ref

  BackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: 'EC2 SG allowing incoming traffic from the loadbalancer'
      GroupName: lucid-backend-sg
      SecurityGroupIngress: 
        - Description: 'allows incoming traffic from loadbalancer to backend instances'
          IpProtocol: -1
          SourceSecurityGroupId: !Ref LBSecurityGroup
      VpcId: 'vpc-0d8b58f3d5536f853' # replace with Ref

  LBSGEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties: 
      Description: 'allows outgoing traffic from LB to to backend instances'
      DestinationSecurityGroupId: !Ref BackendSecurityGroup
      FromPort: 80
      GroupId: !Ref LBSecurityGroup
      IpProtocol: -1
      ToPort: 80

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: 'VPC SG allowing incoming traffic from ec2 instances having the backend SG assigned'
      GroupName: lucid-db-sg
      SecurityGroupIngress: 
        - Description: 'allows incoming traffic from backend instances to the default mysql port'
          IpProtocol: -1
          SourceSecurityGroupId: !Ref BackendSecurityGroup
          ToPort: 3306
      VpcId: 'vpc-0d8b58f3d5536f853' # replace with Ref
